[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Olek\AppData\Local\Temp\idea3.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Olek\AppData\Local\Temp\idea3.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Temurin Java 1.8.0_332)
[debug]       Load.loadUnit: plugins took 119.9613ms
[debug]       Load.loadUnit: defsScala took 0.2634ms
[debug] [Loading] Scanning directory C:\Users\Olek\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Olek\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.617 ms
[debug]           Load.resolveProject(global-plugins) took 48.1557ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Olek\.sbt\1.0\plugins, plugins: List(<none>))) took 169.5954ms
[debug] [Loading] Done in C:\Users\Olek\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 194.0543ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2229ms
[debug]     Load.loadUnit(file:/C:/Users/Olek/.sbt/1.0/plugins/, ...) took 321.9986ms
[debug]   Load.apply: load took 509.0743ms
[debug]   Load.apply: resolveProjects took 7.4112ms
[debug]   Load.apply: finalTransforms took 80.2551ms
[debug]   Load.apply: config.delegates took 9.7152ms
[debug]   Load.apply: Def.make(settings)... took 389.2452ms
[debug]   Load.apply: structureIndex took 82.4417ms
[debug]   Load.apply: mkStreams took 2.687ms
[info] loading global plugins from C:\Users\Olek\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2652.5777ms
[debug]           Load.loadUnit: plugins took 72.6112ms
[debug]           Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\Olek\udemy-akka-essentials\project
[debug]             Load.loadUnit: mkEval took 8.8088ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Olek\udemy-akka-essentials\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6139 ms
[info] loading settings for project udemy-akka-essentials-build from idea3.sbt ...
[debug]               Load.resolveProject(udemy-akka-essentials-build) took 3.3935ms
[debug]             Load.loadTransitive: finalizeProject(Project(id udemy-akka-essentials-build, base: C:\Users\Olek\udemy-akka-essentials\project, plugins: List(<none>))) took 6.7149ms
[debug] [Loading] Done in C:\Users\Olek\udemy-akka-essentials\project, returning: (udemy-akka-essentials-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 161.5172ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.5576ms
[debug]         Load.loadUnit(file:/C:/Users/Olek/udemy-akka-essentials/project/, ...) took 257.0452ms
[debug]       Load.apply: load took 258.5883ms
[debug]       Load.apply: resolveProjects took 0.1425ms
[debug]       Load.apply: finalTransforms took 8.1862ms
[debug]       Load.apply: config.delegates took 0.7571ms
[debug]       Load.apply: Def.make(settings)... took 89.3577ms
[debug]       Load.apply: structureIndex took 28.448ms
[debug]       Load.apply: mkStreams took 0.0042ms
[info] loading project definition from C:\Users\Olek\udemy-akka-essentials\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 797.8022ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\Olek\udemy-akka-essentials
[debug]       Load.loadUnit: mkEval took 0.7704ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.855 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 24.8655ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Olek\udemy-akka-essentials, plugins: List(<none>))) took 29.6194ms
[debug] [Loading] Done in C:\Users\Olek\udemy-akka-essentials, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 154.2316ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.8121ms
[debug]   Load.loadUnit(file:/C:/Users/Olek/udemy-akka-essentials/, ...) took 968.4502ms
[debug] Load.apply: load took 969.9933ms
[debug] Load.apply: resolveProjects took 0.1083ms
[debug] Load.apply: finalTransforms took 22.1935ms
[debug] Load.apply: config.delegates took 0.3377ms
[debug] Load.apply: Def.make(settings)... took 89.0752ms
[debug] Load.apply: structureIndex took 26.9642ms
[debug] Load.apply: mkStreams took 0.0058ms
[info] set current project to root (in build file:/C:/Users/Olek/udemy-akka-essentials/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * ThisBuild / name
[warn]   +- C:\Users\Olek\udemy-akka-essentials\build.sbt:5
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54394 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54394, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to root (in build file:/C:/Users/Olek/udemy-akka-essentials/)
[debug] > Exec(idea-shell, None, None)
